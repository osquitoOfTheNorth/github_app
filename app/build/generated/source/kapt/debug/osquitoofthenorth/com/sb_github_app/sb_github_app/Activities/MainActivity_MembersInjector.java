// Generated by Dagger (https://google.github.io/dagger).
package osquitoofthenorth.com.sb_github_app.sb_github_app.Activities;

import android.content.Context;
import dagger.MembersInjector;
import javax.inject.Provider;
import osquitoofthenorth.com.sb_github_app.sb_github_app.viewmodels.MainViewModelFactory;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<MainViewModelFactory> viewModelFactoryProvider;

  private final Provider<Context> applicationContextProvider;

  public MainActivity_MembersInjector(
      Provider<MainViewModelFactory> viewModelFactoryProvider,
      Provider<Context> applicationContextProvider) {
    this.viewModelFactoryProvider = viewModelFactoryProvider;
    this.applicationContextProvider = applicationContextProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<MainViewModelFactory> viewModelFactoryProvider,
      Provider<Context> applicationContextProvider) {
    return new MainActivity_MembersInjector(viewModelFactoryProvider, applicationContextProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectViewModelFactory(instance, viewModelFactoryProvider.get());
    injectApplicationContext(instance, applicationContextProvider.get());
  }

  public static void injectViewModelFactory(
      MainActivity instance, MainViewModelFactory viewModelFactory) {
    instance.viewModelFactory = viewModelFactory;
  }

  public static void injectApplicationContext(MainActivity instance, Context applicationContext) {
    instance.applicationContext = applicationContext;
  }
}

// Generated by Dagger (https://google.github.io/dagger).
package osquitoofthenorth.com.sb_github_app.sb_github_app.di;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import osquitoofthenorth.com.sb_github_app.sb_github_app.viewmodels.MainViewModelFactory;

public final class AppModule_ProvideViewModelFactoryFactory
    implements Factory<MainViewModelFactory> {
  private final AppModule module;

  public AppModule_ProvideViewModelFactoryFactory(AppModule module) {
    this.module = module;
  }

  @Override
  public MainViewModelFactory get() {
    return provideInstance(module);
  }

  public static MainViewModelFactory provideInstance(AppModule module) {
    return proxyProvideViewModelFactory(module);
  }

  public static AppModule_ProvideViewModelFactoryFactory create(AppModule module) {
    return new AppModule_ProvideViewModelFactoryFactory(module);
  }

  public static MainViewModelFactory proxyProvideViewModelFactory(AppModule instance) {
    return Preconditions.checkNotNull(
        instance.provideViewModelFactory(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
